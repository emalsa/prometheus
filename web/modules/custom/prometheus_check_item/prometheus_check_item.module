<?php

/**
 * @file
 * Primary module hooks for prometheus_check_item module.
 */

use Drupal\Core\Entity\EntityInterface;
use Drupal\prometheus_check_item\Event\CheckItemAnalyzeEvent;

/**
 * Implements hook_cron().
 */
function prometheus_check_item_cron() {

}

/**
 * @param  \Drupal\Core\Entity\EntityInterface  $entity
 *
 */
function prometheus_check_item_node_update(EntityInterface $entity) {
  // Instantiate our event.
  $event = new CheckItemAnalyzeEvent($entity);

  $event_dispatcher = \Drupal::service('event_dispatcher');
  $event_dispatcher->dispatch(CheckItemAnalyzeEvent::EVENT_NAME, $event);
}

/**
 * Cronjob:
 * Trigger check for default
 */
function _trigger_checks_default(): void {
  try {
    /** @var \Drupal\prometheus_check_item\TriggerCheck $triggerCheckService */
    $triggerCheckService = \Drupal::service('prometheus_check_item.trigger_check');
    $triggerCheckService->trigger('default');
  }
  catch (\Exception $exception) {
    $msg = $exception->getMessage();
    \Drupal::logger('test')->error($msg);
  }

}

/**
 * Evaluate the check items after they has been checked.
 */
function _evaluate_checks(): void {
  try {
    /** @var \Drupal\prometheus_check_item\EvaluateChecks $evaluateCheckService */
    $evaluateCheckService = \Drupal::service('prometheus_check_item.evaluate_checks');
    $evaluateCheckService->evaluate();
  }
  catch (\Exception $exception) {
    $msg = $exception->getMessage();
    \Drupal::logger('test')->error($msg);
  }
}